// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.Bills.Infrastructure;

namespace BillAppDDD.Modules.Bills.Infrastructure.Migrations
{
    [DbContext(typeof(BillContext))]
    [Migration("20191003133902_BillSum")]
    partial class BillSum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Bills.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid?>("StoreId");

                    b.Property<DateTime>("date")
                        .HasColumnName("Date");

                    b.Property<float?>("sum")
                        .HasColumnName("Sum_Value");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Bills.Purchase", b =>
                {
                    b.Property<Guid>("BillId");

                    b.Property<Guid>("ProductId");

                    b.Property<float>("Amount");

                    b.Property<float>("Cost");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("Id");

                    b.HasKey("BillId", "ProductId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("Id");

                    b.Property<string>("Barcode")
                        .HasColumnName("Barcode_Value");

                    b.Property<Guid?>("CategoryId");

                    b.Property<Guid?>("LastVersionId");

                    b.Property<bool>("LatestVersion");

                    b.Property<string>("Name");

                    b.Property<float?>("Price")
                        .HasColumnName("Price_Value");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LastVersionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Products.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("Id");

                    b.Property<Guid?>("ProductCategoryId");

                    b.Property<string>("name")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Stores.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("Id");

                    b.Property<string>("logoImagePath")
                        .HasColumnName("LogoImagePath");

                    b.Property<string>("name")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Bills.Bill", b =>
                {
                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Stores.Store")
                        .WithMany("Bills")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Bills.Purchase", b =>
                {
                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Bills.Bill", "Bill")
                        .WithMany("Purchases")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Products.Product", b =>
                {
                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Products.ProductCategory", "category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Products.Product", "lastVersion")
                        .WithMany()
                        .HasForeignKey("LastVersionId");
                });

            modelBuilder.Entity("BillAppDDD.Modules.Bills.Domain.Products.ProductCategory", b =>
                {
                    b.HasOne("BillAppDDD.Modules.Bills.Domain.Products.ProductCategory")
                        .WithMany("Subcategories")
                        .HasForeignKey("ProductCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
